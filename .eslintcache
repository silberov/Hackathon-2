[{"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/index.js":"1","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/App.js":"2","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/reportWebVitals.js":"3","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/pages/Profile.js":"4","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Category/Category.js":"5","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Details/Details.js":"6","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Personal/Personal.js":"7","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/List/List.js":"8","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/UserProfile/UserProfile.component.js":"9","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Typography.js":"10","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Skills/SkillsSoftware.component.js":"11","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Skills/SkillsLanguage.component.js":"12","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Skills/SkillsProfessional.component.js":"13","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/utils/colors.js":"14","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/ProgressBar/ProgressBar.component.js":"15","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Accordion/accoridion.js":"16"},{"size":500,"mtime":1611213291299,"results":"17","hashOfConfig":"18"},{"size":540,"mtime":1611313585602,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611213291299,"results":"20","hashOfConfig":"18"},{"size":891,"mtime":1611305782141,"results":"21","hashOfConfig":"18"},{"size":697,"mtime":1611309883136,"results":"22","hashOfConfig":"18"},{"size":603,"mtime":1611305782137,"results":"23","hashOfConfig":"18"},{"size":526,"mtime":1611305782137,"results":"24","hashOfConfig":"18"},{"size":1071,"mtime":1611305362562,"results":"25","hashOfConfig":"18"},{"size":887,"mtime":1611305362562,"results":"26","hashOfConfig":"18"},{"size":2812,"mtime":1611309883136,"results":"27","hashOfConfig":"18"},{"size":2826,"mtime":1611305362562,"results":"28","hashOfConfig":"18"},{"size":1319,"mtime":1611305362562,"results":"29","hashOfConfig":"18"},{"size":2796,"mtime":1611305362562,"results":"30","hashOfConfig":"18"},{"size":166,"mtime":1611213291299,"results":"31","hashOfConfig":"18"},{"size":769,"mtime":1611305362562,"results":"32","hashOfConfig":"18"},{"size":4123,"mtime":1611317629538,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1q0uwau",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/index.js",[],["71","72"],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/App.js",[],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/reportWebVitals.js",[],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/pages/Profile.js",[],["73","74"],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Category/Category.js",["75"],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Details/Details.js",[],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Personal/Personal.js",[],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/List/List.js",[],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/UserProfile/UserProfile.component.js",[],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Typography.js",[],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Skills/SkillsSoftware.component.js",["76"],"import React from \"react\";\nimport { DiIllustrator, DiPhotoshop } from \"react-icons/di\";\nimport {\n  SiAdobepremiere,\n  SiCinema4D,\n  SiAdobeaftereffects,\n  SiLinux,\n  SiWindows,\n  SiApple,\n  SiAudacity,\n} from \"react-icons/si\";\nimport { GiClapperboard } from \"react-icons/gi\";\n\nimport { ProgressBar } from \"../ProgressBar/ProgressBar.component\";\nimport styles from \"./Skills.module.css\";\n\nexport const SkillsSoftware = (props) => {\n  const { title, titleColor } = props;\n  const [rate1, color1] = [\"20%\", \"#bfd3e9\"];\n  const [rate2, color2] = [\"40%\", \"#89b1d7\"];\n  const [rate3, color3] = [\"60%\", \"#5495c5\"];\n  const [rate4, color4] = [\"80%\", \"#0081b7\"];\n  const [rate5, color5] = [\"99%\", \"#006eab\"];\n\n  return (\n    <div className={styles.skillsMainSoft}>\n      <div className={styles.skillsWrapper}>\n        <div className={styles.title} style={{ color: `#006eab` }}>\n          {title}\n        </div>\n        <div>\n          <ProgressBar\n            color={color1}\n            icon={<SiAdobeaftereffects title=\"After Effects\" />}\n            percentage={rate1}\n            iconColor={\"#006eab\"}\n          />\n          <ProgressBar\n            color={color2}\n            icon={<SiAdobepremiere title=\"Premiere\" />}\n            percentage={rate2}\n            iconColor={\"#006eab\"}\n          />\n          <ProgressBar\n            color={color5}\n            icon={<SiAudacity title=\"Audacity\" />}\n            percentage={rate5}\n            iconColor={\"#006eab\"}\n          />\n          <ProgressBar\n            color={color3}\n            icon={<SiCinema4D title=\"Cinema4D\" />}\n            percentage={rate3}\n            iconColor={\"#006eab\"}\n          />\n          <ProgressBar\n            color={color4}\n            icon={<GiClapperboard title=\"Final Cut\" />}\n            percentage={rate4}\n            iconColor={\"#006eab\"}\n          />\n        </div>\n        <div>\n          <ProgressBar\n            color={color1}\n            icon={<DiIllustrator title=\"Illustrator\" iconColor={\"#006eab\"} />}\n            percentage={rate1}\n            iconColor={\"#006eab\"}\n          />\n          <ProgressBar\n            color={color2}\n            icon={<DiPhotoshop iconColor={\"#006eab\"} />}\n            percentage={rate2}\n            iconColor={\"#006eab\"}\n          />\n          <ProgressBar\n            color={color5}\n            icon={<SiLinux title=\"Linux\" />}\n            percentage={rate5}\n            iconColor={\"#006eab\"}\n          />\n          <ProgressBar\n            color={color3}\n            icon={<SiWindows title=\"Windows\" />}\n            percentage={rate3}\n            iconColor={\"#006eab\"}\n          />\n          <ProgressBar\n            color={color4}\n            icon={<SiApple title=\"Apple\" />}\n            percentage={rate4}\n            iconColor={\"#006eab\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Skills/SkillsLanguage.component.js",["77","78","79","80","81","82"],"import React from \"react\";\nimport Flag from \"react-flagkit\";\nimport { ProgressBar } from \"../ProgressBar/ProgressBar.component\";\nimport styles from \"./Skills.module.css\";\n\nexport const SkillsLanguages = (props) => {\n  const { title } = props;\n  const [rate1, color1] = [\"20%\", \"#ffc100\"];\n  const [rate2, color2] = [\"40%\", \"#ff9a00\"];\n  const [rate3, color3] = [\"60%\", \"#ff7400\"];\n  const [rate4, color4] = [\"80%\", \"#ff4d00\"];\n  const [rate5, color5] = [\"99%\", \"#ff0000\"];\n\n  return (\n    <div className={styles.skillsMainLang}>\n      <div className={styles.skillsWrapper}>\n        <div className={styles.title}> {title} </div>\n        <div>\n          <ProgressBar\n            color={color1}\n            icon={<Flag country=\"DE\" title=\"German\" />}\n            percentage={rate1}\n          />\n          <ProgressBar\n            color={color2}\n            icon={<Flag country=\"GB\" title=\"English\" />}\n            percentage={rate2}\n          />\n        </div>\n        <div>\n          <ProgressBar\n            color={color1}\n            icon={<Flag country=\"FR\" title=\"French\" />}\n            percentage={rate1}\n          />\n          <ProgressBar\n            color={color2}\n            icon={<Flag country=\"SA\" title=\"Arabic\" />}\n            percentage={rate2}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Skills/SkillsProfessional.component.js",[],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/utils/colors.js",[],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/ProgressBar/ProgressBar.component.js",[],"/home/wild/programs/quests/Hackathon-2/Hackathon-2-frontend/src/components/Accordion/accoridion.js",["83","84","85","86"],"import \"./accordion.css\";\nimport MuiAccordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport {\n  makeStyles,\n  StylesProvider,\n  withStyles,\n} from \"@material-ui/core/styles\";\n\nconst getMaxType = (array) => {\n  let max = 0;\n  let array1 = [];\n  array.forEach((array) => {\n    if (array.type > max) {\n      max = array.type;\n    }\n  });\n  for (let i = 0; i <= max; i++) {\n    array1[i] = i;\n  }\n  return array1;\n};\n\nconst convertTypes = (tableName, typeNumber) => {\n  if (tableName === \"education\") {\n    switch (typeNumber) {\n      case 0:\n        return \"degree\";\n      case 1:\n        return \"special knowledge\";\n    }\n  }\n  if (tableName === \"experience\") {\n    switch (typeNumber) {\n      case 0:\n        return \"client\";\n      case 1:\n        return \"industry\";\n      case 2:\n        return \"network\";\n    }\n  }\n  if (tableName === \"skills\") {\n    switch (typeNumber) {\n      case 0:\n        return \"software\";\n      case 1:\n        return \"languages\";\n      case 2:\n        return \"professional\";\n      case 3:\n        return \"softskills\";\n    }\n  }\n\n  if (tableName === \"wishes\") {\n    switch (typeNumber) {\n      case 0:\n        return \"projects\";\n      case 1:\n        return \"fields\";\n      case 2:\n        return \"further education\";\n    }\n  }\n};\n\nconst Accordion = withStyles({\n  root: {\n    border: \"1px solid rgba(0, 0, 0, .125)\",\n    boxShadow: \"none\",\n    \"&:not(:last-child)\": {\n      borderBottom: 0,\n    },\n    \"&:before\": {\n      display: \"none\",\n    },\n    \"&$expanded\": {\n      margin: \"auto\",\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  accordionStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    msTransitionProperty: \"color\",\n    transitionDuration: \"0.2s\",\n    transitionTimingFunction: \"ease\",\n    transitionDelay: \"0s\",\n    fontSize: \"1.5rem\",\n    paddingLeft: \"1.5rem\",\n    height: \"75px\",\n    border: \"none\",\n    borderBox: \"none\",\n    borderLeft: \"none\",\n    borderRight: \"none\",\n    borderBottom: \"1px solid lightgray\",\n  },\n}));\n\nconst AccordionComponent = ({ information, table }) => {\n  const classes = useStyles();\n  let maxType = getMaxType(information);\n\n  return (\n    <div className=\"grid-rows\">\n      <div className={classes.root}>\n        <StylesProvider injectFirst>\n          <div className=\"title\">{table}</div>\n\n          {maxType.map((typeD) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  className={classes.accordionStyle}\n                  expandIcon={\n                    <img\n                      src=\"https://uploads-ssl.webflow.com/5f183b01ba28173d5efc8550/5f183b024ccb09363cec9a1f_icon-chevron-right.svg\"\n                      alt=\"\"\n                      class=\"expandable-arrow\"\n                      style={{ transform: \"rotate(-90deg)\" }}\n                    />\n                  }\n                >\n                  <div className=\"title-order\">\n                    <div className=\"description hover-class\">\n                      {convertTypes(table, typeD)}\n                    </div>\n                    <div className=\"description-number hover-class\">\n                      {\n                        information.filter(function (info) {\n                          return info.type === typeD;\n                        }).length\n                      }\n                    </div>\n                  </div>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <ul>\n                    {information\n                      .filter(function (info) {\n                        return info.type === typeD;\n                      })\n                      .map((data) => {\n                        return <li>{data.name}</li>;\n                      })}\n                  </ul>\n                </AccordionDetails>\n              </Accordion>\n            );\n          })}\n        </StylesProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default AccordionComponent;\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":18,"column":18,"nodeType":"95","messageId":"96","endLine":18,"endColumn":28},{"ruleId":"93","severity":1,"message":"98","line":10,"column":10,"nodeType":"95","messageId":"96","endLine":10,"endColumn":15},{"ruleId":"93","severity":1,"message":"99","line":10,"column":17,"nodeType":"95","messageId":"96","endLine":10,"endColumn":23},{"ruleId":"93","severity":1,"message":"100","line":11,"column":10,"nodeType":"95","messageId":"96","endLine":11,"endColumn":15},{"ruleId":"93","severity":1,"message":"101","line":11,"column":17,"nodeType":"95","messageId":"96","endLine":11,"endColumn":23},{"ruleId":"93","severity":1,"message":"102","line":12,"column":10,"nodeType":"95","messageId":"96","endLine":12,"endColumn":15},{"ruleId":"93","severity":1,"message":"103","line":12,"column":17,"nodeType":"95","messageId":"96","endLine":12,"endColumn":23},{"ruleId":"104","severity":1,"message":"105","line":27,"column":5,"nodeType":"106","messageId":"107","endLine":32,"endColumn":6},{"ruleId":"104","severity":1,"message":"105","line":35,"column":5,"nodeType":"106","messageId":"107","endLine":42,"endColumn":6},{"ruleId":"104","severity":1,"message":"105","line":45,"column":5,"nodeType":"106","messageId":"107","endLine":54,"endColumn":6},{"ruleId":"104","severity":1,"message":"105","line":58,"column":5,"nodeType":"106","messageId":"107","endLine":65,"endColumn":6},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"no-unused-vars","'colors' is defined but never used.","Identifier","unusedVar","'titleColor' is assigned a value but never used.","'rate3' is assigned a value but never used.","'color3' is assigned a value but never used.","'rate4' is assigned a value but never used.","'color4' is assigned a value but never used.","'rate5' is assigned a value but never used.","'color5' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]